class MacAddressLookup {
  // OUI (Organizationally Unique Identifier) database for common manufacturers
  static final Map<String, String> _ouiDatabase = {
    // Apple devices
    '00:03:93': 'Apple',
    '00:0A:27': 'Apple',
    '00:0A:95': 'Apple',
    '00:0D:93': 'Apple',
    '00:1E:52': 'Apple',
    '00:1E:C2': 'Apple',
    '00:19:E3': 'Apple',
    '00:1D:4F': 'Apple',
    '00:1F:5B': 'Apple',
    '00:1F:F3': 'Apple',
    '00:21:E9': 'Apple',
    '00:22:41': 'Apple',
    '00:23:12': 'Apple',
    '00:23:32': 'Apple',
    '00:23:6C': 'Apple',
    '00:23:DF': 'Apple',
    '00:24:36': 'Apple',
    '00:25:00': 'Apple',
    '00:25:BC': 'Apple',
    '00:26:08': 'Apple',
    '00:26:4A': 'Apple',
    '00:26:B0': 'Apple',
    '00:26:BB': 'Apple',
    '00:30:65': 'Apple',
    '00:3E:E1': 'Apple',
    '04:0C:CE': 'Apple',
    '04:15:52': 'Apple',
    '04:1E:64': 'Apple',
    '04:26:65': 'Apple',
    '04:52:F3': 'Apple',
    '04:54:53': 'Apple',
    '04:69:F8': 'Apple',
    '04:D3:CF': 'Apple',
    '04:DB:56': 'Apple',
    '04:E5:36': 'Apple',
    '04:F1:3E': 'Apple',
    '04:F7:E4': 'Apple',
    '08:66:98': 'Apple',
    '08:70:45': 'Apple',
    '08:74:02': 'Apple',
    '08:86:3B': 'Apple',
    '08:F4:AB': 'Apple',
    '0C:15:39': 'Apple',
    '0C:30:21': 'Apple',
    '0C:3E:9F': 'Apple',
    '0C:4D:E9': 'Apple',
    '0C:51:01': 'Apple',
    '0C:74:C2': 'Apple',
    '0C:77:1A': 'Apple',
    '0C:BC:9F': 'Apple',
    '0C:D7:46': 'Apple',
    
    // Samsung devices
    '00:07:AB': 'Samsung',
    '00:12:47': 'Samsung',
    '00:15:99': 'Samsung',
    '00:17:C9': 'Samsung',
    '00:17:D5': 'Samsung',
    '00:18:AF': 'Samsung',
    '00:1A:8A': 'Samsung',
    '00:1B:98': 'Samsung',
    '00:1C:43': 'Samsung',
    '00:1D:25': 'Samsung',
    '00:1D:F6': 'Samsung',
    '00:1E:7D': 'Samsung',
    '00:1F:CC': 'Samsung',
    '00:21:19': 'Samsung',
    '00:23:39': 'Samsung',
    '00:23:D6': 'Samsung',
    '00:23:D7': 'Samsung',
    '00:24:54': 'Samsung',
    '00:24:90': 'Samsung',
    '00:24:91': 'Samsung',
    '00:24:E9': 'Samsung',
    '00:25:38': 'Samsung',
    '00:25:66': 'Samsung',
    '00:25:67': 'Samsung',
    '00:26:37': 'Samsung',
    '00:26:5D': 'Samsung',
    '00:26:5F': 'Samsung',
    
    // Google devices
    '00:1A:11': 'Google',
    '08:9E:08': 'Google',
    '20:DF:B9': 'Google',
    '3C:5A:B4': 'Google',
    '48:D6:D5': 'Google',
    '54:60:09': 'Google',
    '70:3A:CB': 'Google',
    '94:95:A0': 'Google',
    'D8:6C:63': 'Google',
    'F4:F5:D8': 'Google',
    'F4:F5:E8': 'Google',
    'F8:8F:CA': 'Google',
    
    // Sony devices
    '00:01:4A': 'Sony',
    '00:13:A9': 'Sony',
    '00:1A:80': 'Sony',
    '00:1D:0D': 'Sony',
    '00:1F:E4': 'Sony',
    '00:24:BE': 'Sony',
    '00:EB:2D': 'Sony',
    '30:F9:ED': 'Sony',
    '4C:21:D0': 'Sony',
    '54:42:49': 'Sony',
    '5C:B5:24': 'Sony',
    '78:84:3C': 'Sony',
    'BC:6E:64': 'Sony',
    'BC:9C:31': 'Sony',
    'C4:3A:BE': 'Sony',
    
    // Xiaomi devices
    '00:EC:0A': 'Xiaomi',
    '0C:1D:AF': 'Xiaomi',
    '10:2A:B3': 'Xiaomi',
    '14:F6:5A': 'Xiaomi',
    '18:59:36': 'Xiaomi',
    '20:82:C0': 'Xiaomi',
    '28:6C:07': 'Xiaomi',
    '28:E3:1F': 'Xiaomi',
    '34:80:B3': 'Xiaomi',
    '34:CE:00': 'Xiaomi',
    '38:A4:ED': 'Xiaomi',
    '3C:BD:3E': 'Xiaomi',
    '4C:49:E3': 'Xiaomi',
    '50:64:2B': 'Xiaomi',
    '50:8F:4C': 'Xiaomi',
    '58:44:98': 'Xiaomi',
    '64:09:80': 'Xiaomi',
    '64:B4:73': 'Xiaomi',
    '68:DF:DD': 'Xiaomi',
    '74:23:44': 'Xiaomi',
    '74:51:BA': 'Xiaomi',
    '74:DF:BF': 'Xiaomi',
    '78:02:F8': 'Xiaomi',
    '7C:1D:D9': 'Xiaomi',
    '8C:BE:BE': 'Xiaomi',
    '98:FA:E3': 'Xiaomi',
    '9C:99:A0': 'Xiaomi',
    'A0:86:C6': 'Xiaomi',
    'AC:C1:EE': 'Xiaomi',
    'AC:F7:F3': 'Xiaomi',
    'B0:E2:35': 'Xiaomi',
    'C4:0B:CB': 'Xiaomi',
    'C4:6A:B7': 'Xiaomi',
    'D4:97:0B': 'Xiaomi',
    'EC:D0:9F': 'Xiaomi',
    'F0:B4:29': 'Xiaomi',
    'F4:8B:32': 'Xiaomi',
    'F8:A4:5F': 'Xiaomi',
    'FC:64:BA': 'Xiaomi',
    
    // Nokia devices
    '00:02:EE': 'Nokia',
    '00:0E:ED': 'Nokia',
    '00:10:B3': 'Nokia',
    '00:11:9F': 'Nokia',
    '00:12:62': 'Nokia',
    '00:13:70': 'Nokia',
    '00:13:FD': 'Nokia',
    '00:14:A7': 'Nokia',
    '00:15:2A': 'Nokia',
    '00:15:A0': 'Nokia',
    '00:15:DE': 'Nokia',
    '00:16:4E': 'Nokia',
    '00:16:BC': 'Nokia',
    '00:17:4B': 'Nokia',
    '00:17:B0': 'Nokia',
    '00:18:0F': 'Nokia',
    '00:18:42': 'Nokia',
    '00:18:8D': 'Nokia',
    '00:19:2D': 'Nokia',
    '00:19:4F': 'Nokia',
    '00:19:79': 'Nokia',
    '00:19:B7': 'Nokia',
    '00:1A:16': 'Nokia',
    '00:1A:89': 'Nokia',
    '00:1A:DC': 'Nokia',
    '00:1B:33': 'Nokia',
    '00:1B:AF': 'Nokia',
    '00:1B:EE': 'Nokia',
    '00:1C:35': 'Nokia',
    '00:1C:9A': 'Nokia',
    '00:1C:D4': 'Nokia',
    '00:1C:D6': 'Nokia',
    '00:1D:3B': 'Nokia',
    '00:1D:6E': 'Nokia',
    '00:1D:98': 'Nokia',
    '00:1D:E9': 'Nokia',
    '00:1D:FD': 'Nokia',
    '00:1E:3A': 'Nokia',
    '00:1E:3B': 'Nokia',
    '00:1E:A3': 'Nokia',
    '00:1E:A4': 'Nokia',
    '00:1F:00': 'Nokia',
    '00:1F:01': 'Nokia',
    '00:1F:5C': 'Nokia',
    '00:1F:5D': 'Nokia',
    '00:1F:DE': 'Nokia',
    '00:1F:DF': 'Nokia',
    '00:21:08': 'Nokia',
    '00:21:09': 'Nokia',
    '00:21:AA': 'Nokia',
    '00:21:AB': 'Nokia',
    '00:21:FC': 'Nokia',
    '00:21:FE': 'Nokia',
    '00:22:65': 'Nokia',
    '00:22:66': 'Nokia',
    '00:22:FC': 'Nokia',
    '00:22:FD': 'Nokia',
    '00:23:B4': 'Nokia',
    '00:24:03': 'Nokia',
    '00:24:04': 'Nokia',
    '00:24:7C': 'Nokia',
    '00:24:7D': 'Nokia',
    '00:25:47': 'Nokia',
    '00:25:48': 'Nokia',
    '00:25:CF': 'Nokia',
    '00:25:D0': 'Nokia',
    '00:26:68': 'Nokia',
    '00:26:69': 'Nokia',
    '00:26:CC': 'Nokia',
    
    // Audio devices (headphones, speakers)
    '00:09:A7': 'boAt',
    '00:18:09': 'CEVA',
    '00:14:04': 'Arris',
    '00:1A:7D': 'Cyber-Blue',
    '00:26:7E': 'Parrot',
    '00:02:5B': 'Cambridge Silicon Radio',
    '00:25:52': 'VXi Corporation',
    '00:18:91': 'Zhongshan Kaixun Electronics',
    '00:08:E0': 'ATO Technology',
    '00:07:A4': 'GN Netcom',
    '00:1E:F7': 'Cisco Systems',
    '00:0A:30': 'Visteon Corporation',
    '00:0E:9F': 'TEMIC SDS',
    '00:13:17': 'GN Netcom',
    '00:18:C5': 'Nokia Danmark',
    '00:19:1D': 'Nintendo',
    '00:1D:25': 'Samsung',
    '00:1E:DC': 'Sony',
    '00:21:3E': 'TomTom',
    '00:23:76': 'HTC',
    '00:24:1C': 'FuGang Electronic',
    '00:A0:96': 'MITSUMI ELECTRIC',
    '08:18:1A': 'zte',
    '0C:A4:2A': 'OB Telecom Electronic',
    '10:43:69': 'Soundmax Electronic',
    '18:F0:E4': 'Xiaomi Communications',
    '1C:48:F9': 'GN Netcom',
    '28:A1:83': 'ALPS ELECTRIC',
    '30:C1:CB': 'Samsung',
    '38:0A:94': 'Samsung',
    '44:5E:F3': 'Tonalite',
    '44:D8:84': 'Apple',
    '4C:32:75': 'Apple',
    '70:26:05': 'SONY Visual Products',
    '78:A7:EB': 'Samsung',
    '88:C2:55': 'Texas Instruments',
    '90:03:B7': 'Parrot',
    '94:16:25': 'Apple',
    '94:20:53': 'Nokia',
    '9C:64:8B': 'Apple',
    'A0:14:3D': 'PARROT',
    'A8:96:8A': 'Apple',
    'B8:F6:53': 'Fibocom Wireless',
    'BC:20:A4': 'Samsung',
    'C8:85:50': 'Apple',
    'D0:03:4B': 'Apple',
    'D0:E1:40': 'Apple',
    'E0:75:0A': 'ALPS ELECTRIC',
    'E0:AC:CB': 'Apple',
    'E8:07:BF': 'SHENZHEN BILIAN ELECTRONIC',
    'F0:C1:F1': 'Apple',
    'F4:0F:24': 'Apple',
    'F8:1E:DF': 'Apple',
  };

  // Lookup manufacturer by MAC address
  static String? lookupManufacturer(String macAddress) {
    if (macAddress.isEmpty) return null;
    
    // Format MAC address to standard format
    macAddress = _formatMacAddress(macAddress);
    
    // Try exact match first
    if (_ouiDatabase.containsKey(macAddress)) {
      return _ouiDatabase[macAddress];
    }
    
    // Try prefix match (first 8 characters which is XX:XX:XX)
    final prefix = macAddress.substring(0, 8);
    if (_ouiDatabase.containsKey(prefix)) {
      return _ouiDatabase[prefix];
    }
    
    return null;
  }

  // Format MAC address to standard format (XX:XX:XX:XX:XX:XX)
  static String _formatMacAddress(String macAddress) {
    // Remove any non-alphanumeric characters
    macAddress = macAddress.replaceAll(RegExp(r'[^a-fA-F0-9]'), '');
    
    // Insert colons
    if (macAddress.length == 12) {
      return macAddress.replaceAllMapped(
          RegExp(r'([0-9a-fA-F]{2})'),
          (match) => '${match.group(0)}:'
      ).substring(0, 17); // Remove trailing colon
    }
    
    return macAddress;
  }
}